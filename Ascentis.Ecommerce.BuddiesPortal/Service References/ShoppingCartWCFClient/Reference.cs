//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1008
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ascentis.Ecommerce.BuddiesPortal.ShoppingCartWCFClient {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ShoppingCartWCFClient.IShoppingCartService")]
    public interface IShoppingCartService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShoppingCartService/GetShoppingCartByMemberID", ReplyAction="http://tempuri.org/IShoppingCartService/GetShoppingCartByMemberIDResponse")]
        Ascentis.Ecommerce.DataEntity.WebUIEntity.ShoppingCartEntity[] GetShoppingCartByMemberID(long MemberAutoID, string LanguageCode, bool needAttributeSet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShoppingCartService/GetShoppingCartItemByCartAutoID", ReplyAction="http://tempuri.org/IShoppingCartService/GetShoppingCartItemByCartAutoIDResponse")]
        Ascentis.Ecommerce.DataEntity.WebUIEntity.ShoppingCartEntity GetShoppingCartItemByCartAutoID(long ShoppingCartAutoID, string LanguageCode, bool needAttributeSet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShoppingCartService/CreateShoppingCartItem", ReplyAction="http://tempuri.org/IShoppingCartService/CreateShoppingCartItemResponse")]
        long CreateShoppingCartItem(long MemberAutoID, long ProductAutoID, int Quantity, string MemberName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShoppingCartService/CreateShoppingCartItem2", ReplyAction="http://tempuri.org/IShoppingCartService/CreateShoppingCartItem2Response")]
        long CreateShoppingCartItem2(long GroupAutoID, string LangType, long RetailerAutoID, string AttributeSet, int Quantity, long MemberAutoID, string MemberName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShoppingCartService/CreateShoppingCartItem3", ReplyAction="http://tempuri.org/IShoppingCartService/CreateShoppingCartItem3Response")]
        long CreateShoppingCartItem3(long GroupAutoID, string LangType, long RetailerAutoID, string AttributeSet, int Quantity, long MemberAutoID, string MemberName, System.Nullable<int> FlightAutoID, System.Nullable<System.DateTime> FlightDate, string FlightDest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShoppingCartService/UpdateShoppingCartItemQuantity", ReplyAction="http://tempuri.org/IShoppingCartService/UpdateShoppingCartItemQuantityResponse")]
        int UpdateShoppingCartItemQuantity(long ShoppingCartAutoID, int NewQuantity, string ModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShoppingCartService/DeleteShoppingCartItem", ReplyAction="http://tempuri.org/IShoppingCartService/DeleteShoppingCartItemResponse")]
        int DeleteShoppingCartItem(long ShoppingCartAutoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShoppingCartService/CheckoutUnpaidOrder", ReplyAction="http://tempuri.org/IShoppingCartService/CheckoutUnpaidOrderResponse")]
        string CheckoutUnpaidOrder(long MemberAutoID, string LanguageCode, double DiscountAmt, string PromotionCode, bool IsGuest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShoppingCartService/GetShoppingCartProductAvailableStock", ReplyAction="http://tempuri.org/IShoppingCartService/GetShoppingCartProductAvailableStockRespo" +
            "nse")]
        Ascentis.Ecommerce.DataEntity.WebUIEntity.ShoppingCartEntity[] GetShoppingCartProductAvailableStock(long MemberAutoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShoppingCartService/GetShoppingCartValidationCheck", ReplyAction="http://tempuri.org/IShoppingCartService/GetShoppingCartValidationCheckResponse")]
        Ascentis.Ecommerce.DataEntity.WebUIEntity.ShoppingCartEntity[] GetShoppingCartValidationCheck(long MemberAutoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShoppingCartService/UpdatePaymentResult", ReplyAction="http://tempuri.org/IShoppingCartService/UpdatePaymentResultResponse")]
        long UpdatePaymentResult(long MemberAutoID, string OrderNumber, string PaymentStatus, string CardType, string CardNo, string TransactionNo, double DiscountAmt, string PromotionCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShoppingCartService/GetStockInformation", ReplyAction="http://tempuri.org/IShoppingCartService/GetStockInformationResponse")]
        Ascentis.Ecommerce.DataEntity.DataEntity.CheckOut_GetStockInformation[] GetStockInformation(long order_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShoppingCartService/ReserveProduct", ReplyAction="http://tempuri.org/IShoppingCartService/ReserveProductResponse")]
        string ReserveProduct(long MemberAutoID, string LanguageCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShoppingCartService/GetLAGLiquorMsgByAirportCode", ReplyAction="http://tempuri.org/IShoppingCartService/GetLAGLiquorMsgByAirportCodeResponse")]
        string GetLAGLiquorMsgByAirportCode(string airportCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShoppingCartService/GetLAGLiquorMsgByCountry", ReplyAction="http://tempuri.org/IShoppingCartService/GetLAGLiquorMsgByCountryResponse")]
        string GetLAGLiquorMsgByCountry(string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShoppingCartService/GetPromotionCode", ReplyAction="http://tempuri.org/IShoppingCartService/GetPromotionCodeResponse")]
        Ascentis.Ecommerce.DataEntity.WebUIEntity.PromotionCodeEntity GetPromotionCode(string PromoCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShoppingCartService/ReducePromotionCodeCountdown", ReplyAction="http://tempuri.org/IShoppingCartService/ReducePromotionCodeCountdownResponse")]
        bool ReducePromotionCodeCountdown(int PromoCodeAutoID, int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShoppingCartService/IsProductExceedsLimitedQty", ReplyAction="http://tempuri.org/IShoppingCartService/IsProductExceedsLimitedQtyResponse")]
        Ascentis.Ecommerce.DataEntity.WebUIEntity.ShoppingCartEntity IsProductExceedsLimitedQty(long GroupAutoID, string LangType, long RetailerAutoID, string AttributeSet, int Quantity, long MemberAutoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShoppingCartService/GetPromotionCodeByMember", ReplyAction="http://tempuri.org/IShoppingCartService/GetPromotionCodeByMemberResponse")]
        Ascentis.Ecommerce.DataEntity.WebUIEntity.PromotionCodeEntity GetPromotionCodeByMember(string PromoCode, int MemberAutoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShoppingCartService/GetProductJSONInfo", ReplyAction="http://tempuri.org/IShoppingCartService/GetProductJSONInfoResponse")]
        string GetProductJSONInfo(long GroupAutoID, string LangType, long RetailerAutoID, string AttributeSet, int Quantity, long MemberAutoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShoppingCartService/ReplaceShoppingCartWishlist", ReplyAction="http://tempuri.org/IShoppingCartService/ReplaceShoppingCartWishlistResponse")]
        bool ReplaceShoppingCartWishlist(long FromGuestAutoID, long ToMemberAutoID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IShoppingCartServiceChannel : Ascentis.Ecommerce.BuddiesPortal.ShoppingCartWCFClient.IShoppingCartService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ShoppingCartServiceClient : System.ServiceModel.ClientBase<Ascentis.Ecommerce.BuddiesPortal.ShoppingCartWCFClient.IShoppingCartService>, Ascentis.Ecommerce.BuddiesPortal.ShoppingCartWCFClient.IShoppingCartService {
        
        public ShoppingCartServiceClient() {
        }
        
        public ShoppingCartServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ShoppingCartServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ShoppingCartServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ShoppingCartServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Ascentis.Ecommerce.DataEntity.WebUIEntity.ShoppingCartEntity[] GetShoppingCartByMemberID(long MemberAutoID, string LanguageCode, bool needAttributeSet) {
            return base.Channel.GetShoppingCartByMemberID(MemberAutoID, LanguageCode, needAttributeSet);
        }
        
        public Ascentis.Ecommerce.DataEntity.WebUIEntity.ShoppingCartEntity GetShoppingCartItemByCartAutoID(long ShoppingCartAutoID, string LanguageCode, bool needAttributeSet) {
            return base.Channel.GetShoppingCartItemByCartAutoID(ShoppingCartAutoID, LanguageCode, needAttributeSet);
        }
        
        public long CreateShoppingCartItem(long MemberAutoID, long ProductAutoID, int Quantity, string MemberName) {
            return base.Channel.CreateShoppingCartItem(MemberAutoID, ProductAutoID, Quantity, MemberName);
        }
        
        public long CreateShoppingCartItem2(long GroupAutoID, string LangType, long RetailerAutoID, string AttributeSet, int Quantity, long MemberAutoID, string MemberName) {
            return base.Channel.CreateShoppingCartItem2(GroupAutoID, LangType, RetailerAutoID, AttributeSet, Quantity, MemberAutoID, MemberName);
        }
        
        public long CreateShoppingCartItem3(long GroupAutoID, string LangType, long RetailerAutoID, string AttributeSet, int Quantity, long MemberAutoID, string MemberName, System.Nullable<int> FlightAutoID, System.Nullable<System.DateTime> FlightDate, string FlightDest) {
            return base.Channel.CreateShoppingCartItem3(GroupAutoID, LangType, RetailerAutoID, AttributeSet, Quantity, MemberAutoID, MemberName, FlightAutoID, FlightDate, FlightDest);
        }
        
        public int UpdateShoppingCartItemQuantity(long ShoppingCartAutoID, int NewQuantity, string ModifiedBy) {
            return base.Channel.UpdateShoppingCartItemQuantity(ShoppingCartAutoID, NewQuantity, ModifiedBy);
        }
        
        public int DeleteShoppingCartItem(long ShoppingCartAutoID) {
            return base.Channel.DeleteShoppingCartItem(ShoppingCartAutoID);
        }
        
        public string CheckoutUnpaidOrder(long MemberAutoID, string LanguageCode, double DiscountAmt, string PromotionCode, bool IsGuest) {
            return base.Channel.CheckoutUnpaidOrder(MemberAutoID, LanguageCode, DiscountAmt, PromotionCode, IsGuest);
        }
        
        public Ascentis.Ecommerce.DataEntity.WebUIEntity.ShoppingCartEntity[] GetShoppingCartProductAvailableStock(long MemberAutoID) {
            return base.Channel.GetShoppingCartProductAvailableStock(MemberAutoID);
        }
        
        public Ascentis.Ecommerce.DataEntity.WebUIEntity.ShoppingCartEntity[] GetShoppingCartValidationCheck(long MemberAutoID) {
            return base.Channel.GetShoppingCartValidationCheck(MemberAutoID);
        }
        
        public long UpdatePaymentResult(long MemberAutoID, string OrderNumber, string PaymentStatus, string CardType, string CardNo, string TransactionNo, double DiscountAmt, string PromotionCode) {
            return base.Channel.UpdatePaymentResult(MemberAutoID, OrderNumber, PaymentStatus, CardType, CardNo, TransactionNo, DiscountAmt, PromotionCode);
        }
        
        public Ascentis.Ecommerce.DataEntity.DataEntity.CheckOut_GetStockInformation[] GetStockInformation(long order_id) {
            return base.Channel.GetStockInformation(order_id);
        }
        
        public string ReserveProduct(long MemberAutoID, string LanguageCode) {
            return base.Channel.ReserveProduct(MemberAutoID, LanguageCode);
        }
        
        public string GetLAGLiquorMsgByAirportCode(string airportCode) {
            return base.Channel.GetLAGLiquorMsgByAirportCode(airportCode);
        }
        
        public string GetLAGLiquorMsgByCountry(string country) {
            return base.Channel.GetLAGLiquorMsgByCountry(country);
        }
        
        public Ascentis.Ecommerce.DataEntity.WebUIEntity.PromotionCodeEntity GetPromotionCode(string PromoCode) {
            return base.Channel.GetPromotionCode(PromoCode);
        }
        
        public bool ReducePromotionCodeCountdown(int PromoCodeAutoID, int value) {
            return base.Channel.ReducePromotionCodeCountdown(PromoCodeAutoID, value);
        }
        
        public Ascentis.Ecommerce.DataEntity.WebUIEntity.ShoppingCartEntity IsProductExceedsLimitedQty(long GroupAutoID, string LangType, long RetailerAutoID, string AttributeSet, int Quantity, long MemberAutoID) {
            return base.Channel.IsProductExceedsLimitedQty(GroupAutoID, LangType, RetailerAutoID, AttributeSet, Quantity, MemberAutoID);
        }
        
        public Ascentis.Ecommerce.DataEntity.WebUIEntity.PromotionCodeEntity GetPromotionCodeByMember(string PromoCode, int MemberAutoID) {
            return base.Channel.GetPromotionCodeByMember(PromoCode, MemberAutoID);
        }
        
        public string GetProductJSONInfo(long GroupAutoID, string LangType, long RetailerAutoID, string AttributeSet, int Quantity, long MemberAutoID) {
            return base.Channel.GetProductJSONInfo(GroupAutoID, LangType, RetailerAutoID, AttributeSet, Quantity, MemberAutoID);
        }
        
        public bool ReplaceShoppingCartWishlist(long FromGuestAutoID, long ToMemberAutoID) {
            return base.Channel.ReplaceShoppingCartWishlist(FromGuestAutoID, ToMemberAutoID);
        }
    }
}
