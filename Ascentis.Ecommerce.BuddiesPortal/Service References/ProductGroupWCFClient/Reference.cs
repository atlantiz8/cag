//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1008
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ascentis.Ecommerce.BuddiesPortal.ProductGroupWCFClient {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductGroupWCFClient.IProductGroupService")]
    public interface IProductGroupService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductGroupService/GetProductGroupInfo", ReplyAction="http://tempuri.org/IProductGroupService/GetProductGroupInfoResponse")]
        Ascentis.Ecommerce.DataEntity.DTO.ProductGroupInfoForUI GetProductGroupInfo(long groupID, string langType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductGroupService/Brands_SearchProductGroupListWithAttribut" +
            "eSetAndPriceByCategoryID", ReplyAction="http://tempuri.org/IProductGroupService/Brands_SearchProductGroupListWithAttribut" +
            "eSetAndPriceByCategoryIDResponse")]
        string Brands_SearchProductGroupListWithAttributeSetAndPriceByCategoryID(int catetoryAutoID, string langType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductGroupService/GetProductGroupList", ReplyAction="http://tempuri.org/IProductGroupService/GetProductGroupListResponse")]
        Ascentis.Ecommerce.DataEntity.DataEntity.GenericProductGroup_Result[] GetProductGroupList(int pageSize, int currentPageIndex, string langType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductGroupService/GetProductGroupListByFilterWithJson", ReplyAction="http://tempuri.org/IProductGroupService/GetProductGroupListByFilterWithJsonRespon" +
            "se")]
        string GetProductGroupListByFilterWithJson(string categories, double minPrice, double maxPrice, string filterBy, int filterPageSize, int currentPageIndex, string langType, string sortBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductGroupService/Brands_SearchProductGroupListByCategoryID" +
            "", ReplyAction="http://tempuri.org/IProductGroupService/Brands_SearchProductGroupListByCategoryID" +
            "Response")]
        string Brands_SearchProductGroupListByCategoryID(int catetoryAutoID, string langType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductGroupService/Brands_GetTop10ProductGroup", ReplyAction="http://tempuri.org/IProductGroupService/Brands_GetTop10ProductGroupResponse")]
        string Brands_GetTop10ProductGroup(int brandID, string langType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductGroupService/Brands_GetGreatGiftProductGroup", ReplyAction="http://tempuri.org/IProductGroupService/Brands_GetGreatGiftProductGroupResponse")]
        string Brands_GetGreatGiftProductGroup(int brandID, string langType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductGroupService/Brands_GetRecommendProductGroups", ReplyAction="http://tempuri.org/IProductGroupService/Brands_GetRecommendProductGroupsResponse")]
        string Brands_GetRecommendProductGroups(long productGroupAutoID, string langType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductGroupService/Brands_GetProductGroupsFor3Steps", ReplyAction="http://tempuri.org/IProductGroupService/Brands_GetProductGroupsFor3StepsResponse")]
        string Brands_GetProductGroupsFor3Steps(int brandID, string langType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductGroupService/Brands_GetBrandBanners", ReplyAction="http://tempuri.org/IProductGroupService/Brands_GetBrandBannersResponse")]
        string Brands_GetBrandBanners(int brandID, int bannerType, string langType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductGroupService/GetProductGroupListByBrandWithJson", ReplyAction="http://tempuri.org/IProductGroupService/GetProductGroupListByBrandWithJsonRespons" +
            "e")]
        string GetProductGroupListByBrandWithJson(int brandID, int categoryID, int currentPageIndex, int pageSize, string langType, string sortBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductGroupService/GetProductGroupDescriptionFromSearchWithJ" +
            "son", ReplyAction="http://tempuri.org/IProductGroupService/GetProductGroupDescriptionFromSearchWithJ" +
            "sonResponse")]
        string GetProductGroupDescriptionFromSearchWithJson(string searchString, string langType, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductGroupService/GetProductGroupListFromSearchWithJson", ReplyAction="http://tempuri.org/IProductGroupService/GetProductGroupListFromSearchWithJsonResp" +
            "onse")]
        string GetProductGroupListFromSearchWithJson(string searchString, string langType, int currentPageIndex, int pageSize, int count, string sortBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductGroupService/GetProductGroupWithJson", ReplyAction="http://tempuri.org/IProductGroupService/GetProductGroupWithJsonResponse")]
        string GetProductGroupWithJson(long groupID, string langType, int concessionaireAutoID, int conut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductGroupService/GetProductGroupPageWithJson", ReplyAction="http://tempuri.org/IProductGroupService/GetProductGroupPageWithJsonResponse")]
        string GetProductGroupPageWithJson(int pageSizeProduct, int pageSizeBanner, int currentPageIndex, string langType, long[] gids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductGroupService/GetBannerProductSet", ReplyAction="http://tempuri.org/IProductGroupService/GetBannerProductSetResponse")]
        Ascentis.Ecommerce.DataEntity.DataEntity.GetBannerInfoByPage_Result[] GetBannerProductSet(int bannerTypeID, int pageSize, int currentPageIndex, string langType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductGroupService/UpdateProductAttributeWithJson", ReplyAction="http://tempuri.org/IProductGroupService/UpdateProductAttributeWithJsonResponse")]
        string UpdateProductAttributeWithJson(long groupID, string langType, string retailer, string[] values);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductGroupService/GetCategoryAllList", ReplyAction="http://tempuri.org/IProductGroupService/GetCategoryAllListResponse")]
        Ascentis.Ecommerce.DataEntity.AdminEntity.CategoryLangsEntity[] GetCategoryAllList(string langType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductGroupService/GetBrandEntityList", ReplyAction="http://tempuri.org/IProductGroupService/GetBrandEntityListResponse")]
        Ascentis.Ecommerce.DataEntity.WebUIEntity.BrandLangEntity[] GetBrandEntityList(string langType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductGroupService/GetProductGroupListByCategoryWithJson", ReplyAction="http://tempuri.org/IProductGroupService/GetProductGroupListByCategoryWithJsonResp" +
            "onse")]
        string GetProductGroupListByCategoryWithJson(int categoryID, int pageSize, int currentPageIndex, string langType, string sortBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductGroupService/GetPromotionProductGroupListWithJson", ReplyAction="http://tempuri.org/IProductGroupService/GetPromotionProductGroupListWithJsonRespo" +
            "nse")]
        string GetPromotionProductGroupListWithJson(int currentPageIndex, int pageSize, string sortBy, string langType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductGroupService/GetConcessionaireListByGroupID", ReplyAction="http://tempuri.org/IProductGroupService/GetConcessionaireListByGroupIDResponse")]
        Ascentis.Ecommerce.DataEntity.WebUIEntity.ConcessionaireEntity[] GetConcessionaireListByGroupID(long groupID, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductGroupService/GetProductGroupEntityInfoByRetailer", ReplyAction="http://tempuri.org/IProductGroupService/GetProductGroupEntityInfoByRetailerRespon" +
            "se")]
        Ascentis.Ecommerce.DataEntity.WebUIEntity.ProductGroupEntity GetProductGroupEntityInfoByRetailer(long groupID, int concessionaireAutoID, string langType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductGroupService/GetWishlistGroupByMemberIDWithJson", ReplyAction="http://tempuri.org/IProductGroupService/GetWishlistGroupByMemberIDWithJsonRespons" +
            "e")]
        string GetWishlistGroupByMemberIDWithJson(long memberID, string langType, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductGroupService/GetWishlistProductGroupSet", ReplyAction="http://tempuri.org/IProductGroupService/GetWishlistProductGroupSetResponse")]
        string GetWishlistProductGroupSet(long memberID, string langType, int pageSize, int pageIndex, bool reload);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductGroupService/GetRecommendProductGroupListWithJson", ReplyAction="http://tempuri.org/IProductGroupService/GetRecommendProductGroupListWithJsonRespo" +
            "nse")]
        string GetRecommendProductGroupListWithJson(string langType, int departmentID, long groupID, int count);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductGroupServiceChannel : Ascentis.Ecommerce.BuddiesPortal.ProductGroupWCFClient.IProductGroupService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductGroupServiceClient : System.ServiceModel.ClientBase<Ascentis.Ecommerce.BuddiesPortal.ProductGroupWCFClient.IProductGroupService>, Ascentis.Ecommerce.BuddiesPortal.ProductGroupWCFClient.IProductGroupService {
        
        public ProductGroupServiceClient() {
        }
        
        public ProductGroupServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductGroupServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductGroupServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductGroupServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Ascentis.Ecommerce.DataEntity.DTO.ProductGroupInfoForUI GetProductGroupInfo(long groupID, string langType) {
            return base.Channel.GetProductGroupInfo(groupID, langType);
        }
        
        public string Brands_SearchProductGroupListWithAttributeSetAndPriceByCategoryID(int catetoryAutoID, string langType) {
            return base.Channel.Brands_SearchProductGroupListWithAttributeSetAndPriceByCategoryID(catetoryAutoID, langType);
        }
        
        public Ascentis.Ecommerce.DataEntity.DataEntity.GenericProductGroup_Result[] GetProductGroupList(int pageSize, int currentPageIndex, string langType) {
            return base.Channel.GetProductGroupList(pageSize, currentPageIndex, langType);
        }
        
        public string GetProductGroupListByFilterWithJson(string categories, double minPrice, double maxPrice, string filterBy, int filterPageSize, int currentPageIndex, string langType, string sortBy) {
            return base.Channel.GetProductGroupListByFilterWithJson(categories, minPrice, maxPrice, filterBy, filterPageSize, currentPageIndex, langType, sortBy);
        }
        
        public string Brands_SearchProductGroupListByCategoryID(int catetoryAutoID, string langType) {
            return base.Channel.Brands_SearchProductGroupListByCategoryID(catetoryAutoID, langType);
        }
        
        public string Brands_GetTop10ProductGroup(int brandID, string langType) {
            return base.Channel.Brands_GetTop10ProductGroup(brandID, langType);
        }
        
        public string Brands_GetGreatGiftProductGroup(int brandID, string langType) {
            return base.Channel.Brands_GetGreatGiftProductGroup(brandID, langType);
        }
        
        public string Brands_GetRecommendProductGroups(long productGroupAutoID, string langType) {
            return base.Channel.Brands_GetRecommendProductGroups(productGroupAutoID, langType);
        }
        
        public string Brands_GetProductGroupsFor3Steps(int brandID, string langType) {
            return base.Channel.Brands_GetProductGroupsFor3Steps(brandID, langType);
        }
        
        public string Brands_GetBrandBanners(int brandID, int bannerType, string langType) {
            return base.Channel.Brands_GetBrandBanners(brandID, bannerType, langType);
        }
        
        public string GetProductGroupListByBrandWithJson(int brandID, int categoryID, int currentPageIndex, int pageSize, string langType, string sortBy) {
            return base.Channel.GetProductGroupListByBrandWithJson(brandID, categoryID, currentPageIndex, pageSize, langType, sortBy);
        }
        
        public string GetProductGroupDescriptionFromSearchWithJson(string searchString, string langType, int count) {
            return base.Channel.GetProductGroupDescriptionFromSearchWithJson(searchString, langType, count);
        }
        
        public string GetProductGroupListFromSearchWithJson(string searchString, string langType, int currentPageIndex, int pageSize, int count, string sortBy) {
            return base.Channel.GetProductGroupListFromSearchWithJson(searchString, langType, currentPageIndex, pageSize, count, sortBy);
        }
        
        public string GetProductGroupWithJson(long groupID, string langType, int concessionaireAutoID, int conut) {
            return base.Channel.GetProductGroupWithJson(groupID, langType, concessionaireAutoID, conut);
        }
        
        public string GetProductGroupPageWithJson(int pageSizeProduct, int pageSizeBanner, int currentPageIndex, string langType, long[] gids) {
            return base.Channel.GetProductGroupPageWithJson(pageSizeProduct, pageSizeBanner, currentPageIndex, langType, gids);
        }
        
        public Ascentis.Ecommerce.DataEntity.DataEntity.GetBannerInfoByPage_Result[] GetBannerProductSet(int bannerTypeID, int pageSize, int currentPageIndex, string langType) {
            return base.Channel.GetBannerProductSet(bannerTypeID, pageSize, currentPageIndex, langType);
        }
        
        public string UpdateProductAttributeWithJson(long groupID, string langType, string retailer, string[] values) {
            return base.Channel.UpdateProductAttributeWithJson(groupID, langType, retailer, values);
        }
        
        public Ascentis.Ecommerce.DataEntity.AdminEntity.CategoryLangsEntity[] GetCategoryAllList(string langType) {
            return base.Channel.GetCategoryAllList(langType);
        }
        
        public Ascentis.Ecommerce.DataEntity.WebUIEntity.BrandLangEntity[] GetBrandEntityList(string langType) {
            return base.Channel.GetBrandEntityList(langType);
        }
        
        public string GetProductGroupListByCategoryWithJson(int categoryID, int pageSize, int currentPageIndex, string langType, string sortBy) {
            return base.Channel.GetProductGroupListByCategoryWithJson(categoryID, pageSize, currentPageIndex, langType, sortBy);
        }
        
        public string GetPromotionProductGroupListWithJson(int currentPageIndex, int pageSize, string sortBy, string langType) {
            return base.Channel.GetPromotionProductGroupListWithJson(currentPageIndex, pageSize, sortBy, langType);
        }
        
        public Ascentis.Ecommerce.DataEntity.WebUIEntity.ConcessionaireEntity[] GetConcessionaireListByGroupID(long groupID, int count) {
            return base.Channel.GetConcessionaireListByGroupID(groupID, count);
        }
        
        public Ascentis.Ecommerce.DataEntity.WebUIEntity.ProductGroupEntity GetProductGroupEntityInfoByRetailer(long groupID, int concessionaireAutoID, string langType) {
            return base.Channel.GetProductGroupEntityInfoByRetailer(groupID, concessionaireAutoID, langType);
        }
        
        public string GetWishlistGroupByMemberIDWithJson(long memberID, string langType, int count) {
            return base.Channel.GetWishlistGroupByMemberIDWithJson(memberID, langType, count);
        }
        
        public string GetWishlistProductGroupSet(long memberID, string langType, int pageSize, int pageIndex, bool reload) {
            return base.Channel.GetWishlistProductGroupSet(memberID, langType, pageSize, pageIndex, reload);
        }
        
        public string GetRecommendProductGroupListWithJson(string langType, int departmentID, long groupID, int count) {
            return base.Channel.GetRecommendProductGroupListWithJson(langType, departmentID, groupID, count);
        }
    }
}
