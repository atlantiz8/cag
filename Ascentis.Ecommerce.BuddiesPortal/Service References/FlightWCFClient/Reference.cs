//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1008
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ascentis.Ecommerce.BuddiesPortal.FlightWCFClient {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FlightWCFClient.IFlightService")]
    public interface IFlightService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightService/GetFlightInfoByMemberID", ReplyAction="http://tempuri.org/IFlightService/GetFlightInfoByMemberIDResponse")]
        Ascentis.Ecommerce.DataEntity.WebUIEntity.FlightDetailEntity GetFlightInfoByMemberID(long MemberAutoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightService/GetFlightInfoByOrderId", ReplyAction="http://tempuri.org/IFlightService/GetFlightInfoByOrderIdResponse")]
        Ascentis.Ecommerce.DataEntity.WebUIEntity.FlightDetailEntity GetFlightInfoByOrderId(long orderid, long memberid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightService/GetFlightInfoByFlightNo", ReplyAction="http://tempuri.org/IFlightService/GetFlightInfoByFlightNoResponse")]
        Ascentis.Ecommerce.DataEntity.WebUIEntity.FlightDetailEntity GetFlightInfoByFlightNo(string FlightNo, System.DateTime FlightDateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightService/UpdateFlightDetailsByMemberID", ReplyAction="http://tempuri.org/IFlightService/UpdateFlightDetailsByMemberIDResponse")]
        int UpdateFlightDetailsByMemberID(long MemberAutoID, System.Nullable<int> Flight_AutoID, System.Nullable<System.DateTime> FlightDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightService/UpdateFlightInfoByOrderId", ReplyAction="http://tempuri.org/IFlightService/UpdateFlightInfoByOrderIdResponse")]
        bool UpdateFlightInfoByOrderId(int flightinfo_id, long orderid, long memberid, string member_name, int fids_id, System.Nullable<System.DateTime> flight_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightService/IsOperationHourValid", ReplyAction="http://tempuri.org/IFlightService/IsOperationHourValidResponse")]
        System.Tuple<System.DateTime, System.DateTime, bool> IsOperationHourValid(System.Nullable<int> flightInfoId, System.Nullable<System.DateTime> flightDate, Ascentis.Ecommerce.DataEntity.WebUIEntity.FlightDetailEntity flightDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightService/GetFlightDestinationCountries", ReplyAction="http://tempuri.org/IFlightService/GetFlightDestinationCountriesResponse")]
        string[] GetFlightDestinationCountries();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFlightServiceChannel : Ascentis.Ecommerce.BuddiesPortal.FlightWCFClient.IFlightService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FlightServiceClient : System.ServiceModel.ClientBase<Ascentis.Ecommerce.BuddiesPortal.FlightWCFClient.IFlightService>, Ascentis.Ecommerce.BuddiesPortal.FlightWCFClient.IFlightService {
        
        public FlightServiceClient() {
        }
        
        public FlightServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FlightServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FlightServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FlightServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Ascentis.Ecommerce.DataEntity.WebUIEntity.FlightDetailEntity GetFlightInfoByMemberID(long MemberAutoID) {
            return base.Channel.GetFlightInfoByMemberID(MemberAutoID);
        }
        
        public Ascentis.Ecommerce.DataEntity.WebUIEntity.FlightDetailEntity GetFlightInfoByOrderId(long orderid, long memberid) {
            return base.Channel.GetFlightInfoByOrderId(orderid, memberid);
        }
        
        public Ascentis.Ecommerce.DataEntity.WebUIEntity.FlightDetailEntity GetFlightInfoByFlightNo(string FlightNo, System.DateTime FlightDateTime) {
            return base.Channel.GetFlightInfoByFlightNo(FlightNo, FlightDateTime);
        }
        
        public int UpdateFlightDetailsByMemberID(long MemberAutoID, System.Nullable<int> Flight_AutoID, System.Nullable<System.DateTime> FlightDate) {
            return base.Channel.UpdateFlightDetailsByMemberID(MemberAutoID, Flight_AutoID, FlightDate);
        }
        
        public bool UpdateFlightInfoByOrderId(int flightinfo_id, long orderid, long memberid, string member_name, int fids_id, System.Nullable<System.DateTime> flight_date) {
            return base.Channel.UpdateFlightInfoByOrderId(flightinfo_id, orderid, memberid, member_name, fids_id, flight_date);
        }
        
        public System.Tuple<System.DateTime, System.DateTime, bool> IsOperationHourValid(System.Nullable<int> flightInfoId, System.Nullable<System.DateTime> flightDate, Ascentis.Ecommerce.DataEntity.WebUIEntity.FlightDetailEntity flightDetail) {
            return base.Channel.IsOperationHourValid(flightInfoId, flightDate, flightDetail);
        }
        
        public string[] GetFlightDestinationCountries() {
            return base.Channel.GetFlightDestinationCountries();
        }
    }
}
