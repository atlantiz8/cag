//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1008
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ascentis.Ecommerce.BuddiesPortal.MemberWCFClient {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MemberWCFClient.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUserByUserID", ReplyAction="http://tempuri.org/IUserService/UpdateUserByUserIDResponse")]
        bool UpdateUserByUserID(Ascentis.Ecommerce.DataEntity.DataEntity.Member sUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetMemberProfileByGuestToken", ReplyAction="http://tempuri.org/IUserService/GetMemberProfileByGuestTokenResponse")]
        Ascentis.Ecommerce.DataEntity.WebUIEntity.MemberEntity GetMemberProfileByGuestToken(string Token, long GuestAutoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/RegisterMemberToCRM", ReplyAction="http://tempuri.org/IUserService/RegisterMemberToCRMResponse")]
        Ascentis.Ecommerce.Services.EcommService.CRMService.CRMMemberRegistrationResponse RegisterMemberToCRM(Ascentis.Ecommerce.DataEntity.DataEntity.Member NewMember);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/EnquireCRMCard", ReplyAction="http://tempuri.org/IUserService/EnquireCRMCardResponse")]
        Ascentis.Ecommerce.Services.EcommService.CRMService.CRMCardEnquiryResponse EnquireCRMCard(string CRMCardNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateCRMProfile", ReplyAction="http://tempuri.org/IUserService/UpdateCRMProfileResponse")]
        Ascentis.Ecommerce.Services.EcommService.CRMService.CRMUpdateProfileResponse UpdateCRMProfile(Ascentis.Ecommerce.DataEntity.WebUIEntity.MemberEntity member);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AuthenticateCRMMember", ReplyAction="http://tempuri.org/IUserService/AuthenticateCRMMemberResponse")]
        string AuthenticateCRMMember(string CardNo, string Password, int MemberAutoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetMemberList", ReplyAction="http://tempuri.org/IUserService/GetMemberListResponse")]
        Ascentis.Ecommerce.DataEntity.DataEntity.Member[] GetMemberList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAdministratorList", ReplyAction="http://tempuri.org/IUserService/GetAdministratorListResponse")]
        Ascentis.Ecommerce.DataEntity.DataEntity.Administrator[] GetAdministratorList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetMemberProfile", ReplyAction="http://tempuri.org/IUserService/GetMemberProfileResponse")]
        Ascentis.Ecommerce.DataEntity.DataEntity.Member GetMemberProfile(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetMemberEntityProfile", ReplyAction="http://tempuri.org/IUserService/GetMemberEntityProfileResponse")]
        Ascentis.Ecommerce.DataEntity.WebUIEntity.MemberEntity GetMemberEntityProfile(string memberID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAdministratorProfile", ReplyAction="http://tempuri.org/IUserService/GetAdministratorProfileResponse")]
        Ascentis.Ecommerce.DataEntity.DataEntity.Administrator GetAdministratorProfile(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAdminProfile", ReplyAction="http://tempuri.org/IUserService/GetAdminProfileResponse")]
        Ascentis.Ecommerce.DataEntity.AdminEntity.AdministratorEntity GetAdminProfile(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAdministratorProfileByID", ReplyAction="http://tempuri.org/IUserService/GetAdministratorProfileByIDResponse")]
        Ascentis.Ecommerce.DataEntity.AdminEntity.AdministratorEntity GetAdministratorProfileByID(int AutoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAdministratorRoleListByUserID", ReplyAction="http://tempuri.org/IUserService/GetAdministratorRoleListByUserIDResponse")]
        Ascentis.Ecommerce.DataEntity.AdminEntity.AdministratorEntity[] GetAdministratorRoleListByUserID(out int recordCount, string userID, string userName, int roleID, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAdministratorRoleList", ReplyAction="http://tempuri.org/IUserService/GetAdministratorRoleListResponse")]
        Ascentis.Ecommerce.DataEntity.AdminEntity.AdministratorEntity[] GetAdministratorRoleList(out int recordCount, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddMember", ReplyAction="http://tempuri.org/IUserService/AddMemberResponse")]
        bool AddMember(ref Ascentis.Ecommerce.DataEntity.DataEntity.Member member);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateMember", ReplyAction="http://tempuri.org/IUserService/UpdateMemberResponse")]
        bool UpdateMember(Ascentis.Ecommerce.DataEntity.DataEntity.Member member);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddAdministrator", ReplyAction="http://tempuri.org/IUserService/AddAdministratorResponse")]
        bool AddAdministrator(Ascentis.Ecommerce.DataEntity.DataEntity.Administrator admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateAdministrator", ReplyAction="http://tempuri.org/IUserService/UpdateAdministratorResponse")]
        bool UpdateAdministrator(Ascentis.Ecommerce.DataEntity.DataEntity.Administrator admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateAdministratorRole", ReplyAction="http://tempuri.org/IUserService/UpdateAdministratorRoleResponse")]
        bool UpdateAdministratorRole(int AutoID, int RoleID, string ModifiedBy, System.DateTime ModifiedOn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateAdministratorLoginDate", ReplyAction="http://tempuri.org/IUserService/UpdateAdministratorLoginDateResponse")]
        bool UpdateAdministratorLoginDate(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteMember", ReplyAction="http://tempuri.org/IUserService/DeleteMemberResponse")]
        bool DeleteMember(string memberID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateMemberProfile", ReplyAction="http://tempuri.org/IUserService/UpdateMemberProfileResponse")]
        bool UpdateMemberProfile(Ascentis.Ecommerce.DataEntity.WebUIEntity.MemberEntity member);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateMemberCRMCardNoMemberID", ReplyAction="http://tempuri.org/IUserService/UpdateMemberCRMCardNoMemberIDResponse")]
        bool UpdateMemberCRMCardNoMemberID(long memberAutoID, string EcommCardNo, string CRMCardNo, string CRMMemberID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAdministratorEmailList", ReplyAction="http://tempuri.org/IUserService/GetAdministratorEmailListResponse")]
        Ascentis.Ecommerce.DataEntity.AdminEntity.AdministratorEntity[] GetAdministratorEmailList(int[] AutoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCagEmail", ReplyAction="http://tempuri.org/IUserService/GetCagEmailResponse")]
        Ascentis.Ecommerce.DataEntity.AdminEntity.AdministratorEntity[] GetCagEmail(int roleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateMemberLoginAttempt", ReplyAction="http://tempuri.org/IUserService/UpdateMemberLoginAttemptResponse")]
        Ascentis.Ecommerce.DataEntity.WebUIEntity.MemberEntity UpdateMemberLoginAttempt(string memberID, bool LoginSuccess, int MaxLoginAttempt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetMemberProfileByAutoID", ReplyAction="http://tempuri.org/IUserService/GetMemberProfileByAutoIDResponse")]
        Ascentis.Ecommerce.DataEntity.WebUIEntity.MemberEntity GetMemberProfileByAutoID(long MemberAutoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetMemberEmailByPassportBirthDate", ReplyAction="http://tempuri.org/IUserService/GetMemberEmailByPassportBirthDateResponse")]
        Ascentis.Ecommerce.DataEntity.WebUIEntity.MemberEntity GetMemberEmailByPassportBirthDate(string Passport, int SecurityQuestionId, string SecurityAnswer, System.DateTime BirthDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateMemberEmailID", ReplyAction="http://tempuri.org/IUserService/UpdateMemberEmailIDResponse")]
        bool UpdateMemberEmailID(string CurrentEmail, Ascentis.Ecommerce.DataEntity.WebUIEntity.MemberEntity member);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ActivateMember", ReplyAction="http://tempuri.org/IUserService/ActivateMemberResponse")]
        bool ActivateMember(long MemberAutoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateAdministratorLoginAttempt", ReplyAction="http://tempuri.org/IUserService/UpdateAdministratorLoginAttemptResponse")]
        Ascentis.Ecommerce.DataEntity.AdminEntity.AdministratorEntity UpdateAdministratorLoginAttempt(string adminID, bool LoginSuccess, int MaxLoginAttempt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/IsCRCardUsed", ReplyAction="http://tempuri.org/IUserService/IsCRCardUsedResponse")]
        bool IsCRCardUsed(string cardNo, long MemberAutoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SendMemberSalesTxnToCRM", ReplyAction="http://tempuri.org/IUserService/SendMemberSalesTxnToCRMResponse")]
        bool SendMemberSalesTxnToCRM(long memberAutoID, string orderNo, double salesAmt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CreateGuestAccount", ReplyAction="http://tempuri.org/IUserService/CreateGuestAccountResponse")]
        Ascentis.Ecommerce.DataEntity.WebUIEntity.MemberEntity CreateGuestAccount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateGuestDetails", ReplyAction="http://tempuri.org/IUserService/UpdateGuestDetailsResponse")]
        bool UpdateGuestDetails(long GuestAutoID, string DateOfBirth, string Destination, string Name, string EmailAddress, string Passport, long FlightAutoID, System.Nullable<System.DateTime> FlightDate, System.Nullable<bool> NewsLetter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetGuestDetails", ReplyAction="http://tempuri.org/IUserService/GetGuestDetailsResponse")]
        Ascentis.Ecommerce.DataEntity.WebUIEntity.GuestEntity GetGuestDetails(long GuestAutoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateGuestUserID", ReplyAction="http://tempuri.org/IUserService/UpdateGuestUserIDResponse")]
        bool UpdateGuestUserID(long GuestAutoID, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ConvertGuestCheckoutOrder", ReplyAction="http://tempuri.org/IUserService/ConvertGuestCheckoutOrderResponse")]
        bool ConvertGuestCheckoutOrder(long guestMemberAutoID, long newMemberAutoID, bool sendSalesToCRM);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAdministratorEntityList", ReplyAction="http://tempuri.org/IUserService/GetAdministratorEntityListResponse")]
        Ascentis.Ecommerce.DataEntity.AdminEntity.AdministratorEntity[] GetAdministratorEntityList(string UserID, int skip, int take, ref int pagetotal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAdminInfoByAutoID", ReplyAction="http://tempuri.org/IUserService/GetAdminInfoByAutoIDResponse")]
        Ascentis.Ecommerce.DataEntity.AdminEntity.AdministratorForUI GetAdminInfoByAutoID(int AdminAutoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/InsertAdministrationCode", ReplyAction="http://tempuri.org/IUserService/InsertAdministrationCodeResponse")]
        bool InsertAdministrationCode(Ascentis.Ecommerce.DataEntity.DataEntity.Administrator Admin, int ConcessionaireAutoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAdministratorByUserID", ReplyAction="http://tempuri.org/IUserService/GetAdministratorByUserIDResponse")]
        bool GetAdministratorByUserID(string sUserID, int AutoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateAdminByUserID", ReplyAction="http://tempuri.org/IUserService/UpdateAdminByUserIDResponse")]
        bool UpdateAdminByUserID(Ascentis.Ecommerce.DataEntity.DataEntity.Administrator admin, int ConcessionaireAutoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteAdministrator", ReplyAction="http://tempuri.org/IUserService/DeleteAdministratorResponse")]
        bool DeleteAdministrator(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserMemberEntityList", ReplyAction="http://tempuri.org/IUserService/GetUserMemberEntityListResponse")]
        Ascentis.Ecommerce.DataEntity.AdminEntity.UserMemberEntity[] GetUserMemberEntityList(string UserID, string PassportNo, int skip, int take, ref int pagetotal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserInfoByAutoID", ReplyAction="http://tempuri.org/IUserService/GetUserInfoByAutoIDResponse")]
        Ascentis.Ecommerce.DataEntity.AdminEntity.UserMemberEntityForUI GetUserInfoByAutoID(int UserAutoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserByUserID", ReplyAction="http://tempuri.org/IUserService/GetUserByUserIDResponse")]
        bool GetUserByUserID(string sUserID, int AutoID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : Ascentis.Ecommerce.BuddiesPortal.MemberWCFClient.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<Ascentis.Ecommerce.BuddiesPortal.MemberWCFClient.IUserService>, Ascentis.Ecommerce.BuddiesPortal.MemberWCFClient.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool UpdateUserByUserID(Ascentis.Ecommerce.DataEntity.DataEntity.Member sUser) {
            return base.Channel.UpdateUserByUserID(sUser);
        }
        
        public Ascentis.Ecommerce.DataEntity.WebUIEntity.MemberEntity GetMemberProfileByGuestToken(string Token, long GuestAutoID) {
            return base.Channel.GetMemberProfileByGuestToken(Token, GuestAutoID);
        }
        
        public Ascentis.Ecommerce.Services.EcommService.CRMService.CRMMemberRegistrationResponse RegisterMemberToCRM(Ascentis.Ecommerce.DataEntity.DataEntity.Member NewMember) {
            return base.Channel.RegisterMemberToCRM(NewMember);
        }
        
        public Ascentis.Ecommerce.Services.EcommService.CRMService.CRMCardEnquiryResponse EnquireCRMCard(string CRMCardNo) {
            return base.Channel.EnquireCRMCard(CRMCardNo);
        }
        
        public Ascentis.Ecommerce.Services.EcommService.CRMService.CRMUpdateProfileResponse UpdateCRMProfile(Ascentis.Ecommerce.DataEntity.WebUIEntity.MemberEntity member) {
            return base.Channel.UpdateCRMProfile(member);
        }
        
        public string AuthenticateCRMMember(string CardNo, string Password, int MemberAutoID) {
            return base.Channel.AuthenticateCRMMember(CardNo, Password, MemberAutoID);
        }
        
        public Ascentis.Ecommerce.DataEntity.DataEntity.Member[] GetMemberList() {
            return base.Channel.GetMemberList();
        }
        
        public Ascentis.Ecommerce.DataEntity.DataEntity.Administrator[] GetAdministratorList() {
            return base.Channel.GetAdministratorList();
        }
        
        public Ascentis.Ecommerce.DataEntity.DataEntity.Member GetMemberProfile(string UserID) {
            return base.Channel.GetMemberProfile(UserID);
        }
        
        public Ascentis.Ecommerce.DataEntity.WebUIEntity.MemberEntity GetMemberEntityProfile(string memberID) {
            return base.Channel.GetMemberEntityProfile(memberID);
        }
        
        public Ascentis.Ecommerce.DataEntity.DataEntity.Administrator GetAdministratorProfile(string UserID) {
            return base.Channel.GetAdministratorProfile(UserID);
        }
        
        public Ascentis.Ecommerce.DataEntity.AdminEntity.AdministratorEntity GetAdminProfile(string userID) {
            return base.Channel.GetAdminProfile(userID);
        }
        
        public Ascentis.Ecommerce.DataEntity.AdminEntity.AdministratorEntity GetAdministratorProfileByID(int AutoID) {
            return base.Channel.GetAdministratorProfileByID(AutoID);
        }
        
        public Ascentis.Ecommerce.DataEntity.AdminEntity.AdministratorEntity[] GetAdministratorRoleListByUserID(out int recordCount, string userID, string userName, int roleID, int pageIndex, int pageSize) {
            return base.Channel.GetAdministratorRoleListByUserID(out recordCount, userID, userName, roleID, pageIndex, pageSize);
        }
        
        public Ascentis.Ecommerce.DataEntity.AdminEntity.AdministratorEntity[] GetAdministratorRoleList(out int recordCount, int pageIndex, int pageSize) {
            return base.Channel.GetAdministratorRoleList(out recordCount, pageIndex, pageSize);
        }
        
        public bool AddMember(ref Ascentis.Ecommerce.DataEntity.DataEntity.Member member) {
            return base.Channel.AddMember(ref member);
        }
        
        public bool UpdateMember(Ascentis.Ecommerce.DataEntity.DataEntity.Member member) {
            return base.Channel.UpdateMember(member);
        }
        
        public bool AddAdministrator(Ascentis.Ecommerce.DataEntity.DataEntity.Administrator admin) {
            return base.Channel.AddAdministrator(admin);
        }
        
        public bool UpdateAdministrator(Ascentis.Ecommerce.DataEntity.DataEntity.Administrator admin) {
            return base.Channel.UpdateAdministrator(admin);
        }
        
        public bool UpdateAdministratorRole(int AutoID, int RoleID, string ModifiedBy, System.DateTime ModifiedOn) {
            return base.Channel.UpdateAdministratorRole(AutoID, RoleID, ModifiedBy, ModifiedOn);
        }
        
        public bool UpdateAdministratorLoginDate(string userID) {
            return base.Channel.UpdateAdministratorLoginDate(userID);
        }
        
        public bool DeleteMember(string memberID) {
            return base.Channel.DeleteMember(memberID);
        }
        
        public bool UpdateMemberProfile(Ascentis.Ecommerce.DataEntity.WebUIEntity.MemberEntity member) {
            return base.Channel.UpdateMemberProfile(member);
        }
        
        public bool UpdateMemberCRMCardNoMemberID(long memberAutoID, string EcommCardNo, string CRMCardNo, string CRMMemberID) {
            return base.Channel.UpdateMemberCRMCardNoMemberID(memberAutoID, EcommCardNo, CRMCardNo, CRMMemberID);
        }
        
        public Ascentis.Ecommerce.DataEntity.AdminEntity.AdministratorEntity[] GetAdministratorEmailList(int[] AutoID) {
            return base.Channel.GetAdministratorEmailList(AutoID);
        }
        
        public Ascentis.Ecommerce.DataEntity.AdminEntity.AdministratorEntity[] GetCagEmail(int roleID) {
            return base.Channel.GetCagEmail(roleID);
        }
        
        public Ascentis.Ecommerce.DataEntity.WebUIEntity.MemberEntity UpdateMemberLoginAttempt(string memberID, bool LoginSuccess, int MaxLoginAttempt) {
            return base.Channel.UpdateMemberLoginAttempt(memberID, LoginSuccess, MaxLoginAttempt);
        }
        
        public Ascentis.Ecommerce.DataEntity.WebUIEntity.MemberEntity GetMemberProfileByAutoID(long MemberAutoID) {
            return base.Channel.GetMemberProfileByAutoID(MemberAutoID);
        }
        
        public Ascentis.Ecommerce.DataEntity.WebUIEntity.MemberEntity GetMemberEmailByPassportBirthDate(string Passport, int SecurityQuestionId, string SecurityAnswer, System.DateTime BirthDate) {
            return base.Channel.GetMemberEmailByPassportBirthDate(Passport, SecurityQuestionId, SecurityAnswer, BirthDate);
        }
        
        public bool UpdateMemberEmailID(string CurrentEmail, Ascentis.Ecommerce.DataEntity.WebUIEntity.MemberEntity member) {
            return base.Channel.UpdateMemberEmailID(CurrentEmail, member);
        }
        
        public bool ActivateMember(long MemberAutoID) {
            return base.Channel.ActivateMember(MemberAutoID);
        }
        
        public Ascentis.Ecommerce.DataEntity.AdminEntity.AdministratorEntity UpdateAdministratorLoginAttempt(string adminID, bool LoginSuccess, int MaxLoginAttempt) {
            return base.Channel.UpdateAdministratorLoginAttempt(adminID, LoginSuccess, MaxLoginAttempt);
        }
        
        public bool IsCRCardUsed(string cardNo, long MemberAutoID) {
            return base.Channel.IsCRCardUsed(cardNo, MemberAutoID);
        }
        
        public bool SendMemberSalesTxnToCRM(long memberAutoID, string orderNo, double salesAmt) {
            return base.Channel.SendMemberSalesTxnToCRM(memberAutoID, orderNo, salesAmt);
        }
        
        public Ascentis.Ecommerce.DataEntity.WebUIEntity.MemberEntity CreateGuestAccount() {
            return base.Channel.CreateGuestAccount();
        }
        
        public bool UpdateGuestDetails(long GuestAutoID, string DateOfBirth, string Destination, string Name, string EmailAddress, string Passport, long FlightAutoID, System.Nullable<System.DateTime> FlightDate, System.Nullable<bool> NewsLetter) {
            return base.Channel.UpdateGuestDetails(GuestAutoID, DateOfBirth, Destination, Name, EmailAddress, Passport, FlightAutoID, FlightDate, NewsLetter);
        }
        
        public Ascentis.Ecommerce.DataEntity.WebUIEntity.GuestEntity GetGuestDetails(long GuestAutoID) {
            return base.Channel.GetGuestDetails(GuestAutoID);
        }
        
        public bool UpdateGuestUserID(long GuestAutoID, string Email) {
            return base.Channel.UpdateGuestUserID(GuestAutoID, Email);
        }
        
        public bool ConvertGuestCheckoutOrder(long guestMemberAutoID, long newMemberAutoID, bool sendSalesToCRM) {
            return base.Channel.ConvertGuestCheckoutOrder(guestMemberAutoID, newMemberAutoID, sendSalesToCRM);
        }
        
        public Ascentis.Ecommerce.DataEntity.AdminEntity.AdministratorEntity[] GetAdministratorEntityList(string UserID, int skip, int take, ref int pagetotal) {
            return base.Channel.GetAdministratorEntityList(UserID, skip, take, ref pagetotal);
        }
        
        public Ascentis.Ecommerce.DataEntity.AdminEntity.AdministratorForUI GetAdminInfoByAutoID(int AdminAutoID) {
            return base.Channel.GetAdminInfoByAutoID(AdminAutoID);
        }
        
        public bool InsertAdministrationCode(Ascentis.Ecommerce.DataEntity.DataEntity.Administrator Admin, int ConcessionaireAutoID) {
            return base.Channel.InsertAdministrationCode(Admin, ConcessionaireAutoID);
        }
        
        public bool GetAdministratorByUserID(string sUserID, int AutoID) {
            return base.Channel.GetAdministratorByUserID(sUserID, AutoID);
        }
        
        public bool UpdateAdminByUserID(Ascentis.Ecommerce.DataEntity.DataEntity.Administrator admin, int ConcessionaireAutoID) {
            return base.Channel.UpdateAdminByUserID(admin, ConcessionaireAutoID);
        }
        
        public bool DeleteAdministrator(string UserID) {
            return base.Channel.DeleteAdministrator(UserID);
        }
        
        public Ascentis.Ecommerce.DataEntity.AdminEntity.UserMemberEntity[] GetUserMemberEntityList(string UserID, string PassportNo, int skip, int take, ref int pagetotal) {
            return base.Channel.GetUserMemberEntityList(UserID, PassportNo, skip, take, ref pagetotal);
        }
        
        public Ascentis.Ecommerce.DataEntity.AdminEntity.UserMemberEntityForUI GetUserInfoByAutoID(int UserAutoID) {
            return base.Channel.GetUserInfoByAutoID(UserAutoID);
        }
        
        public bool GetUserByUserID(string sUserID, int AutoID) {
            return base.Channel.GetUserByUserID(sUserID, AutoID);
        }
    }
}
